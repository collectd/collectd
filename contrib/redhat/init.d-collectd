#!/bin/bash
#
# collectd    Startup script for the Collectd statistics gathering daemon
# chkconfig: - 99 01
# description: Collectd is a statistics gathering daemon used to collect \
#   system information ie. cpu, memory, disk, network
# processname: collectd
# config: /etc/collectd.conf
# config: /etc/sysconfig/collectd
# pidfile: /var/run/collectd.pid

# Source function library.
. /etc/init.d/functions

RETVAL=0
ARGS=""
prog="collectdmon"
service="collectd"
CONFIG=/etc/collectd.conf
COLLECTD=/usr/sbin/collectd
COLLECTDMONPIDDIR="/var/run"
COLLECTDMONPID="$COLLECTDMONPIDDIR/collectdmon.pid"

MAXWAIT=30

if [ -r /etc/sysconfig/$service ]; then
	. /etc/sysconfig/$service
fi

if [[ ! -d $COLLECTDMONPIDDIR ]]; then
	mkdir -p $COLLECTDMONPIDDIR
	[ -n "${RUNAS}" ] && chown "${RUNAS}:" "$COLLECTDMONPIDDIR"
fi

check_config() {
        if test ! -r "$CONFIG"; then
                return 2
        fi
        if ! $COLLECTD -t -C "$CONFIG"; then
                return 1
        fi
        return 0
}

start () {
	echo -n $"Starting collectd: "
	check_config
	rc="$?"
	if test "$rc" -ne 0; then
		RETVAL=6
		echo $"not starting due to configuration error"
		failure $"not starting $service due to configuration error"
	else
		daemon --user "${RUNAS:-root}" $prog -P $COLLECTDMONPID -c $COLLECTD -- -C "$CONFIG" $ARGS
		RETVAL=$?
		echo
		[ $RETVAL -eq 0 ] && touch /var/lock/subsys/$service
	fi
}

stop () {
	echo -n $"Stopping collectd: "
	killproc -p $COLLECTDMONPID -d $MAXWAIT $prog
	RETVAL=$?
	echo
	[ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/$service
}

restart () {
	check_config
	rc="$?"
	if test "$rc" -ne 0; then
		RETVAL=6
		echo $"not restarting due to configuration error"
		failure $"not restarting $service due to configuration error"
	else
		stop
		start
	fi
}

# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  status)
	status -p $COLLECTDMONPID $prog
	;;
  restart|reload)
	restart
	;;
  condrestart)
	[ -f /var/lock/subsys/$service ] && restart || :
	;;
  *)
	echo $"Usage: $0 {start|stop|status|restart|reload|condrestart}"
	exit 1
esac

exit $?

# vim:syntax=sh
