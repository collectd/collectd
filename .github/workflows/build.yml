---
name: Build
on:
  - push
  - pull_request

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-20.04
    container: collectd/ci:${{ matrix.container_tag }}
    continue-on-error: ${{ matrix.allow_failures }}
    strategy:
      fail-fast: false
      matrix:
        # for tasks that are optional, use the continue-on-error option, to prevent a workflow from failing when the task fails
        allow_failures: [ false ]
        container_tag:
          # debian family
          - buster_amd64
          - stretch_amd64
          - stretch_i386
          - trusty_amd64
          - xenial_amd64
          # RedHat family
          - el7_x86_64
          - fedora28_x86_64
        include:
          - container_tag: sid_amd64
            allow_failures: true
          - container_tag: fedora_rawhide_x86_64
            allow_failures: true
    env:
      MAKEFLAGS: "-j 2"
    steps:
    - uses: actions/checkout@v2
    - run: type pkg-config
    - run: pkg-config --list-all | sort -u
    - name: Generate configure script
      run:
        ./build.sh
    - name: configure
      run: ./configure
    - name: Make
      run: make
    - name: make check
      run: make check
    - name: install bzip2
      continue-on-error: true
      run: |
        yum install -y bzip2 || apt install -y bzip2
    - name: make
      continue-on-error: true
      run: |
        make distcheck DISTCHECK_CONFIGURE_FLAGS="--disable-dependency-tracking --enable-debug"

  # These tasks are from .cirrus.yml
  bleeding_edge_compilers_task:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-20.04
    container: collectd/ci:sid_amd64
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        CC:
        - gcc-7
        - gcc-8
        - clang-6.0
        - clang-7
        - clang-8
        - clang-9
    env:
      CC: ${{ matrix.CC }}
    steps:
    - uses: actions/checkout@v2
    - name: Generate config script
      run: ./build.sh
    - name: Check compiler verision
      run: $CC --version
    - name: Configure the build
      run: |
        ./configure CC=$CC \
        --enable-debug --without-libstatgrab --disable-dependency-tracking \
        CFLAGS="$(dpkg-buildflags --get CFLAGS)" \
        CPPLAGS="$(dpkg-buildflags --get CPPFLAGS)" \
        LDFLAGS="$(dpkg-buildflags --get LDFLAGS)"
    - name: Compile collectd
      run: make -j2 -sk
    - name: Run tests
      run: make -j2 -sk check
